import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go

def render(data):
    """
    P√°gina de An√°lise Temporal
    
    Respons√°vel: [NOME_DESENVOLVEDOR_5]
    Prazo: [DATA_PRAZO]
    
    Esta p√°gina deve conter:
    - S√©ries temporais de interna√ß√µes
    - Sazonalidade e tend√™ncias
    - An√°lise de padr√µes temporais
    """
    
    st.title("üìà An√°lise Temporal")
    st.markdown("---")
    
    # Placeholder para desenvolvimento
    st.info("üöß **√Årea de Desenvolvimento - An√°lise Temporal**")
    st.markdown("""
    ### Tarefas para o Desenvolvedor:
    
    1. **S√©ries Temporais**:
       - Gr√°fico de linha por m√™s/ano
       - Tend√™ncias de longo prazo
       - Compara√ß√£o ano a ano
    
    2. **Sazonalidade**:
       - Padr√µes por m√™s do ano
       - Picos e vales sazonais
       - An√°lise de doen√ßas sazonais
    
    3. **An√°lise de Perman√™ncia**:
       - Tempo m√©dio de interna√ß√£o por per√≠odo
       - Varia√ß√µes temporais na perman√™ncia
       - Fatores que influenciam a perman√™ncia
    
    4. **Previs√µes**:
       - Proje√ß√µes futuras (se aplic√°vel)
       - Modelos de tend√™ncia
       - Intervalos de confian√ßa
    
    5. **An√°lise por Dia da Semana**:
       - Padr√µes de interna√ß√£o por dia
       - Diferen√ßas entre dias √∫teis e fins de semana
       - Picos de demanda
    
    6. **Correla√ß√£o Temporal**:
       - Rela√ß√£o entre diferentes vari√°veis ao longo do tempo
       - An√°lise de defasagens
       - Eventos significativos
    """)
    
    # Exemplo de an√°lise b√°sica
    st.markdown("### Exemplo de An√°lise:")
    
    # Criar coluna de per√≠odo
    data_temp = data.copy()
    data_temp['periodo'] = data_temp['ano_cmpt'].astype(str) + '-' + data_temp['mes_cmpt'].astype(str).str.zfill(2)
    
    # An√°lise por per√≠odo
    internacoes_por_periodo = data_temp.groupby('periodo').size().sort_index()
    valores_por_periodo = data_temp.groupby('periodo')['val_tot'].sum().sort_index()
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.markdown("**Interna√ß√µes por Per√≠odo**")
        st.line_chart(internacoes_por_periodo)
    
    with col2:
        st.markdown("**Valores por Per√≠odo**")
        st.line_chart(valores_por_periodo)
    
    # An√°lise por m√™s
    st.markdown("### An√°lise por M√™s:")
    
    mes_freq = data['mes_cmpt'].value_counts().sort_index()
    meses_nome = {1: 'Jan', 2: 'Fev', 3: 'Mar', 4: 'Abr', 5: 'Mai', 6: 'Jun',
                  7: 'Jul', 8: 'Ago', 9: 'Set', 10: 'Out', 11: 'Nov', 12: 'Dez'}
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.markdown("**Distribui√ß√£o por M√™s**")
        st.bar_chart(mes_freq)
    
    with col2:
        st.markdown("**Estat√≠sticas Temporais**")
        st.metric("Per√≠odo dos Dados", f"{data['ano_cmpt'].min()}-{data['ano_cmpt'].max()}")
        st.metric("Meses Dispon√≠veis", f"{data['mes_cmpt'].nunique()}")
        st.metric("M√©dia por M√™s", f"{len(data) / data['mes_cmpt'].nunique():.0f} interna√ß√µes")
    
    # An√°lise de perman√™ncia temporal
    st.markdown("### Perman√™ncia por Per√≠odo:")
    
    perm_por_periodo = data_temp.groupby('periodo')['dias_perm'].mean().sort_index()
    st.line_chart(perm_por_periodo)
    
    # Dados de exemplo para o desenvolvedor
    st.markdown("### Dados Dispon√≠veis para An√°lise:")
    st.write(f"- Per√≠odo: {data['ano_cmpt'].min()}-{data['mes_cmpt'].min():02d} at√© {data['ano_cmpt'].max()}-{data['mes_cmpt'].max():02d}")
    st.write(f"- Datas de interna√ß√£o dispon√≠veis: {data['dt_inter'].notna().sum()} registros")
    st.write(f"- Datas de sa√≠da dispon√≠veis: {data['dt_saida'].notna().sum()} registros")
    
    st.markdown("### Amostra dos Dados:")
    st.dataframe(data[['ano_cmpt', 'mes_cmpt', 'dt_inter', 'dt_saida', 'dias_perm', 'val_tot']].head(10))
    
    st.markdown("### Observa√ß√µes para o Desenvolvedor:")
    st.info("""
    - As datas est√£o em formato string (YYYY-MM-DD)
    - Ser√° necess√°rio converter para datetime para an√°lises mais avan√ßadas
    - Considere usar bibliotecas como `pandas.to_datetime()` para convers√£o
    - Plotly oferece bons recursos para gr√°ficos temporais interativos
    """)