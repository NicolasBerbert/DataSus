import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go

def render(data):
    """
    P√°gina de Gest√£o de Recursos
    
    Respons√°vel: [NOME_DESENVOLVEDOR_6]
    Prazo: [DATA_PRAZO]
    
    Esta p√°gina deve conter:
    - An√°lise de custos por tipo de interna√ß√£o
    - Efici√™ncia dos recursos
    - An√°lise de valor vs resultados
    """
    
    st.title("üí∞ Gest√£o de Recursos")
    st.markdown("---")
    
    # Placeholder para desenvolvimento
    st.info("üöß **√Årea de Desenvolvimento - Gest√£o de Recursos**")
    st.markdown("""
    ### Tarefas para o Desenvolvedor:
    
    1. **An√°lise de Custos**:
       - Distribui√ß√£o de valores por tipo de interna√ß√£o
       - Custo m√©dio por diagn√≥stico
       - An√°lise de outliers financeiros
    
    2. **Efici√™ncia Operacional**:
       - Custo por dia de interna√ß√£o
       - Rela√ß√£o custo vs perman√™ncia
       - Identifica√ß√£o de interna√ß√µes de alto custo
    
    3. **ROI da Aten√ß√£o B√°sica**:
       - Compara√ß√£o: preven√ß√£o vs tratamento
       - Custos evit√°veis por melhor aten√ß√£o prim√°ria
       - An√°lise de custo-efetividade
    
    4. **An√°lise por Car√°ter**:
       - Urg√™ncia vs eletiva
       - Diferen√ßas nos custos
       - Padr√µes de utiliza√ß√£o
    
    5. **Dashboards Financeiros**:
       - KPIs de gest√£o
       - Alertas de custo
       - Benchmarking
    
    6. **Proje√ß√µes Or√ßament√°rias**:
       - Estimativas de gastos futuros
       - Cen√°rios de redu√ß√£o de custos
       - Planejamento financeiro
    """)
    
    # Exemplo de an√°lise b√°sica
    st.markdown("### Exemplo de An√°lise:")
    
    # Estat√≠sticas financeiras
    col1, col2, col3, col4 = st.columns(4)
    
    with col1:
        st.metric("Valor Total", f"R$ {data['val_tot'].sum():,.2f}")
    
    with col2:
        st.metric("Valor M√©dio", f"R$ {data['val_tot'].mean():,.2f}")
    
    with col3:
        st.metric("Valor Mediano", f"R$ {data['val_tot'].median():,.2f}")
    
    with col4:
        st.metric("Custo/Dia", f"R$ {(data['val_tot'] / data['dias_perm']).mean():,.2f}")
    
    # An√°lise por car√°ter da interna√ß√£o
    st.markdown("### An√°lise por Car√°ter da Interna√ß√£o:")
    
    if 'car_int' in data.columns:
        carater_map = {'01': 'Eletiva', '02': 'Urg√™ncia', '03': 'Acidente no trabalho', '04': 'Acidente no tr√¢nsito'}
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.markdown("**Distribui√ß√£o por Car√°ter**")
            car_freq = data['car_int'].value_counts()
            st.dataframe(car_freq.to_frame().reset_index())
        
        with col2:
            st.markdown("**Valor M√©dio por Car√°ter**")
            valor_por_car = data.groupby('car_int')['val_tot'].mean().sort_values(ascending=False)
            st.dataframe(valor_por_car.to_frame().reset_index())
    
    # An√°lise de custo-efetividade
    st.markdown("### An√°lise de Custo-Efetividade:")
    
    # Criar faixas de custo
    data_temp = data.copy()
    data_temp['faixa_custo'] = pd.cut(data_temp['val_tot'], 
                                      bins=[0, 500, 1000, 5000, float('inf')], 
                                      labels=['Baixo (‚â§R$500)', 'M√©dio (R$501-1000)', 
                                             'Alto (R$1001-5000)', 'Muito Alto (>R$5000)'])
    
    custo_dist = data_temp['faixa_custo'].value_counts()
    st.dataframe(custo_dist.to_frame().reset_index())
    
    # Top diagn√≥sticos mais caros
    st.markdown("### Top 10 Diagn√≥sticos Mais Caros:")
    
    top_caros = data.groupby('diag_princ')['val_tot'].agg(['sum', 'mean', 'count']).sort_values('sum', ascending=False).head(10)
    top_caros.columns = ['Valor Total', 'Valor M√©dio', 'Quantidade']
    st.dataframe(top_caros.reset_index())
    
    # An√°lise de perman√™ncia vs custo
    st.markdown("### Rela√ß√£o Perman√™ncia vs Custo:")
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.markdown("**Correla√ß√£o**")
        correlacao = data['dias_perm'].corr(data['val_tot'])
        st.metric("Correla√ß√£o Perman√™ncia x Custo", f"{correlacao:.3f}")
    
    with col2:
        st.markdown("**Custo por Dia de Perman√™ncia**")
        custo_dia = data['val_tot'] / data['dias_perm']
        st.metric("Custo M√©dio/Dia", f"R$ {custo_dia.mean():.2f}")
    
    # Dados de exemplo para o desenvolvedor
    st.markdown("### Dados Dispon√≠veis para An√°lise:")
    st.write(f"- Faixa de valores: R$ {data['val_tot'].min():.2f} - R$ {data['val_tot'].max():.2f}")
    st.write(f"- Interna√ß√µes com custo zero: {(data['val_tot'] == 0).sum()}")
    st.write(f"- Perman√™ncia m√©dia: {data['dias_perm'].mean():.1f} dias")
    
    st.markdown("### Amostra dos Dados:")
    st.dataframe(data[['val_tot', 'dias_perm', 'car_int', 'diag_princ']].head(10))
    
    st.markdown("### Observa√ß√µes para o Desenvolvedor:")
    st.info("""
    - Todos os valores est√£o em reais (R$)
    - Alguns registros podem ter valor zero (verificar se s√£o v√°lidos)
    - Considere an√°lises de outliers para identificar casos at√≠picos
    - √ötil criar dashboards interativos para diferentes n√≠veis de gest√£o
    """)