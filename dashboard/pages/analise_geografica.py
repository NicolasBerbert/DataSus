import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go

def render(data):
    """
    P√°gina de An√°lise Geogr√°fica
    
    Respons√°vel: [NOME_DESENVOLVEDOR_4]
    Prazo: [DATA_PRAZO]
    
    Esta p√°gina deve conter:
    - Distribui√ß√£o por munic√≠pio
    - Mapas de calor por regi√£o
    - An√°lise de fluxo de pacientes
    """
    
    st.title("üó∫Ô∏è An√°lise Geogr√°fica")
    st.markdown("---")
    
    # Placeholder para desenvolvimento
    st.info("üöß **√Årea de Desenvolvimento - An√°lise Geogr√°fica**")
    st.markdown("""
    ### Tarefas para o Desenvolvedor:
    
    1. **Distribui√ß√£o por Munic√≠pio**:
       - Ranking de munic√≠pios com mais interna√ß√µes
       - Taxa de interna√ß√£o por 1000 habitantes
       - Mapa interativo do Paran√°
    
    2. **An√°lise Regional**:
       - Agrupamento por regi√µes de sa√∫de
       - Compara√ß√£o entre regi√µes
       - Identifica√ß√£o de hotspots
    
    3. **Fluxo de Pacientes**:
       - Munic√≠pio de origem vs local de interna√ß√£o
       - Dist√¢ncias percorridas
       - An√°lise de referenciamento
    
    4. **Cobertura e Acesso**:
       - Vazios assistenciais
       - Concentra√ß√£o de recursos
       - Equidade geogr√°fica
    
    5. **Mapas Interativos**:
       - Choropleth maps
       - Densidade de interna√ß√µes
       - Filtros por causa e per√≠odo
    
    6. **Integra√ß√£o com Dados Externos**:
       - Popula√ß√£o por munic√≠pio (IBGE)
       - √çndices socioecon√¥micos
       - Rede de estabelecimentos
    """)
    
    # Exemplo de an√°lise b√°sica
    st.markdown("### Exemplo de An√°lise:")
    
    # An√°lise por munic√≠pio
    munic_freq = data['munic_res'].value_counts().head(10)
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.markdown("**Top 10 Munic√≠pios - Interna√ß√µes**")
        st.dataframe(munic_freq.to_frame().reset_index())
    
    with col2:
        st.markdown("**Top 10 Munic√≠pios - Valor Total**")
        valor_por_munic = data.groupby('munic_res')['val_tot'].sum().sort_values(ascending=False).head(10)
        st.dataframe(valor_por_munic.to_frame().reset_index())
    
    # Estat√≠sticas geogr√°ficas
    st.markdown("### Estat√≠sticas Geogr√°ficas:")
    
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.metric("Munic√≠pios √önicos", f"{data['munic_res'].nunique()}")
    
    with col2:
        st.metric("Munic√≠pio Mais Frequente", f"{munic_freq.index[0]}")
    
    with col3:
        st.metric("Interna√ß√µes no Top Munic.", f"{munic_freq.iloc[0]}")
    
    # Dados de exemplo para o desenvolvedor
    st.markdown("### Dados Dispon√≠veis para An√°lise:")
    st.write(f"- Total de munic√≠pios: {data['munic_res'].nunique()}")
    st.write(f"- C√≥digos de munic√≠pio dispon√≠veis: {sorted(data['munic_res'].unique())[:10]}...")
    
    st.markdown("### Amostra dos Dados:")
    st.dataframe(data[['munic_res', 'val_tot', 'dias_perm', 'diag_princ']].head(10))
    
    st.markdown("### Observa√ß√µes para o Desenvolvedor:")
    st.info("""
    - Os c√≥digos de munic√≠pio seguem o padr√£o IBGE
    - Ser√° necess√°rio integrar com dados do IBGE para obter nomes e coordenadas
    - Considerar usar bibliotecas como `geopandas` para mapas
    - Plotly oferece bons recursos para mapas interativos
    """)